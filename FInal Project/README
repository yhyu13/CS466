Evaluating the Accuracy and Efficiency of Multiple Sequence Alignment Methods on BAliBASE4 Protein Datasets
Introduction
In bioinformatics, multiple sequence alignment (MSA) is a way of aligning three or more biological sequences, including DNA, RNA or protein, so that scientists can infer the structural, functional or evolutionary relationship between them. MSA has been playing a very important role in the discipline of molecular and evolutionary biology. Since computing the optimal multiple sequence alignment is a NP-complete problem1, it is not feasible to find an algorithm that solves for the exact solution in polynomial time. Therefore, a number of approximation/heuristic algorithms were developed as an alternative. This research work presents a comparative study of four MSA tools, evaluating their accuracy as well as efficiency on six separate protein datasets from BAliBASE4 database.
MSA Software
 Here we would like to explore the two major algorithms: progressive alignment method and iterative method. MSA softwares were selected as representative of their underlying algorithms. T-Coffee is a classic consistency-based progressive method.  It pre-processes a dataset of all pair-wise alignments between the sequences to generate a library of alignment information that can be used to guide the progressive alignment2. This software can be run with a simple command of “t_coffee foo.seq”. 
There is also a popular matrix-based progressive method – MUSCLE. MUSCLE was developed in 2004 by Robert C. Edgar, whose paper has been cited for more than 50,000 times since. This method produces alignments in three stages. In the draft progressive stage, the algorithm rapidly produces a draft multiple alignment using kmer distance and UPGMA for a matrix and binary tree. In the improved progressive stage, the Kimura distance is used to re-estimate the matrix and binary tree, producing a more accurate multiple alignment. The final refinement stage refines the improved SP score of alignment made, significantly improving the accuracy of final alignment. This software can be run with a simple command of “muscle -in <input file> -out <output file>”.
PASTA is a relatively new algorithm that uses a iterative method. We decided to evaluate this method because it is relatively new and it is worthwhile to study its performance comparatively along with other methods. PASTA uses an iterative divide-and-conquer method to construct an alignment based on the maximum likelihood (ML) tree obtained in the previous iteration, and then computes a new ML tree on the new alignment. This software can be run with the following command as an example: “python run_pasta.py -i input_fasta [-t starting_tree]”. 
Finally, there is an interesting method introduced in 2011 called CLUSTAL OMEGA. It has been described as more accurate than commonly used, fast methods such as MUSCLE. And it is said to be comparable in accuracy to some of the intensive slow methods, in our case, T-Coffee. Clustal-Omega uses HMMs for the alignment engine, based on the HHalign package from Johannes Soeding. Guide trees are made using an enhanced version of mBed which can cluster very large numbers of sequences in O(N*log(N)) time. Multiple alignment then proceeds by aligning larger and larger alignments using HHalign, following the clustering given by the guide tree. A simple command line to create a profile HMM for aligned sequences is : “./clustalo -i aligned_sequence.sto”. To run this software, here is an example command: “./clustalo -i input.fa -o output.sto”.
Table 1. Summary of MSA tools used in this study 
Major Algorithm
MSA method
Version
Download Link
Progressive - Consistency
T-Coffee
11.00.8cbe486
http://www.tcoffee.org/
Progressive - Matrix
MUSCLE
v3.8.31
http://www.drive5.com/muscle/
Iterative divide and conquer
PASTA
--
https://github.com/smirarab/pasta.git
Hidden Markov Model
Clustal Omega
1.2.4
http://www.clustal.org/omega/

Above is a summary of the selected MSA methods, their versions, the underlying algorithms and the links to download them.
Alignment Assessment Procedure 
To quantify the accuracy of the alignments generated by these MSA methods, We would compare the generated alignments with trusted reference alignments and calculate the sum-of-pairs (SP) score, and the total column (TC) score. The sum of pair score is computed by adding up the correctly aligned sequences. It determines the capability of MSA methods to align some, if not all, of the sequences in an MSA. Column score measures the capacity of MSA tools to align all of the sequences correctly. The SPFN rate (the fraction of true pairs that are not recognized in the alignment) and the SPFP rate (the fraction of recognized pairs that are not true pairs) will be calculated as measures of alignment error as opposed to accuracy. FastSP is an open-source Java program that can be used to compute these metrics. Run FastSp with “java -jar FastSP.jar -r reference_alignment_file -e estimated_alignment_file” and it should output the parameters described above. It is available for download from https://github.com/smirarab/FastSP.git. 
We would also document the run time of each method on specific datasets to compare their efficiency. 
Benchmark Datasets
There are a number of simulated datasets specifically developed to assess the performance of MSA methods that are available for download from BAliBASE4 (http://www.lbgi.fr/balibase/)6. We will examine six datasets from the database. Reference 1 consists of 38 equidistance sequences. Reference 2 comprises 44 sequences that simulate protein families with orphan sequences. Reference 3 is a set of 30 sequences from divergent subfamilies. References 5 includes 16 sequences which have large internal insertions and deletions. Reference 9 is an assembly of sequences with linear motifs. Reference 10 includes 218 sequences containing “large, complex protein families with subfamily specific features, motifs in disordered regions and fragmentary/erroneous sequences”6. It simulates the noisy data generated from high throughput sequencing and represents some challenges faced by current MSA methods.
Bibliography
1. L. Wang and T. Jiang. “On the complexity of multiple sequence alignment”. Journal of Computational Biology, 1:337–348, 1994. 
2. Notredame, C., Higgins, D.G., and Heringa, J. (2000). “T-Coffee: a novel method for fast and accurate multiple sequence alignment”. Journal of Molecular Biology, 302:205–217.
3. Berger, M.P., and Munson, P.J. (1991). “A novel randomized iterative strategy for aligning multiple protein sequences”. CABIOS, 7:479-484.
4. K. Liu, S. Raghavan, S. Nelesen, C. R. Linder, T. Warnow (2009). "Rapid and Accurate Large-Scale Coestimation of Sequence Alignments and Phylogenetic Trees". Science, 324:1561-1564.
5. K. Liu, T. J. Warnow, M.T. Holder, et al (2012). “SATé-II: Very Fast and Accurate Simultaneous Estimation of Multiple Sequence Alignments and Phylogenetic Trees”. Syst Biol : 61 (1): 90-106. doi: 10.1093/sysbio/syr095
6. Bahr, A., Thompson, J. D., Thierry, J.-C., & Poch, O. (2001). BAliBASE (Benchmark Alignment dataBASE): enhancements for repeats, transmembrane sequences and circular permutations. Nucleic Acids Research, 29(1), 323–326.
6. Robert C. Edgar (2004). MUSCLE: multiple sequence alignment with high accuracy and high throughput. Nucleic Acids Res, 32 (5): 1792-1797. doi: 10.1093/nar/gkh340
7. Robert C. Edgar (2004). MUSCLE: a multiple sequence alignment method with reduced time and space complexity. BMC Bioinformatics. 2004;5:113. doi: 10.1186/1471-2105-5-113. 
8. Sievers, F., Wilm, A., Dineen, D., Gibson, T. J., Karpuls, K., Li, W., … Lopez, R. (2011, November 10). Fast, scalable generation of high‐quality protein multiple sequence alignments using Clustal Omega | Molecular Systems Biology. Retrieved from http://msb.embopress.org/content/7/1/539

